<?php

namespace App\Http\Controllers\Backend;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Http;
use Illuminate\Support\Facades\Log;  // Import the Log facade

class VulnerabilityScanController extends Controller
{
    // Display the scan form
    public function showForm()
    {
        return view('backend/vulnerability/scan');
    }

    // Handle website vulnerability scan request
    public function scanWebsite(Request $request)
    {
        $request->validate([
            'website' => 'required|url',
        ]);

        $website = $request->input('website');

        // Make a POST request to the Flask vulnerability scan API
        try {
            Log::info('Starting vulnerability scan for website: ' . $website);

            $response = Http::post('http://127.0.0.1:5000/vulnerability_scan', [
                'website' => $website
            ]);

            // Log the response from Flask API
            Log::info('Response from vulnerability scanner: ' . $response->body());

            // If the request is successful
            if ($response->successful()) {
                $results = $response->json();

                Log::info('Vulnerability scan successful for website: ' . $website);

                // Pass the results to the view to display them
                return view('backend/vulnerability/scan_results', compact('results', 'website'));
            } else {
                // Log any error responses from the Flask API
                Log::error('Failed to scan website: ' . $website . '. Response status: ' . $response->status());
                return back()->withErrors(['error' => 'Failed to connect to vulnerability scanner.']);
            }
        } catch (\Exception $e) {
            // Log exceptions
            Log::error('Error occurred during scan for website: ' . $website . '. Exception: ' . $e->getMessage());

            return back()->withErrors(['error' => 'Error occurred while connecting: ' . $e->getMessage()]);
        }
    }
}
